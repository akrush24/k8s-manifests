apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: jenkins-deployment
spec:
  selector:
    matchLabels:
      app: jenkins
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      initContainers:
      - name: volume-mount-hack
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /var/jenkins_home2"]
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home2
      containers:
      - name: jenkins
        image: jenkins/jenkins:latest
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
      volumes:
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: jenkins-home-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-home-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-www-service
spec:
  selector:
    app: jenkins
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jenkins-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - jenkins.k8s.phoenixit.ru
    secretName: phx2019
  rules:
  - host: jenkins.k8s.phoenixit.ru
    http:
      paths:
      - backend:
          serviceName: jenkins-www-service
          servicePort: 80
  - host: jenkins.phoenixit.ru
    http:   
      paths:
      - backend: 
          serviceName: jenkins-www-service
          servicePort: 80

