apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: es
  serviceName: es-service
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: es
    spec:
      containers:
      - env:
        - name: cluster.name
          value: elasticsearch-cluster
        - name: node.name
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: cluster.initial_master_nodes
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: discovery.zen.ping.unicast.hosts
          value: es-0.es-service.elk.svc.cluster.local
        - name: ES_JAVA_OPTS
          value: -Xms2g -Xmx2g
        image: elasticsearch:7.4.1
        imagePullPolicy: IfNotPresent
        name: es
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: tcp
          protocol: TCP
        resources:
          limits:
            memory: 16Gi
          requests:
            memory: 8Gi
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: es-data
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - chown -R 1000:1000 /usr/share/elasticsearch/data
        image: busybox
        imagePullPolicy: Always
        name: fix-the-volume-permission
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: es-data
      - command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        image: busybox
        imagePullPolicy: Always
        name: increase-the-vm-max-map-count
        resources: {}
        securityContext:
          privileged: true
      - command:
        - sh
        - -c
        - ulimit -n 65536
        image: busybox
        imagePullPolicy: Always
        name: increase-the-ulimit
        resources: {}
        securityContext:
          privileged: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 300
      volumes:
      - name: es-data
        persistentVolumeClaim:
          claimName: es-data-pvc
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: es-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Ti
      storageClassName: rbd-prd
      volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: es
  name: es-service
spec:
  externalIPs:
  - 192.168.245.42
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    nodePort: 31903
    port: 9200
    protocol: TCP
    targetPort: 9200
  selector:
    app: es
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-logging
  labels:
    k8s-app: kibana-logging
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana-logging
  template:
    metadata:
      labels:
        k8s-app: kibana-logging
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      containers:
      - name: kibana-logging
        #image: docker.elastic.co/kibana/kibana-oss:7.2.0
        image: docker.elastic.co/kibana/kibana-oss:7.4.1
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        env:
          - name: ELASTICSEARCH_HOSTS
            value: http://es-service:9200
          - name: SERVER_NAME
            value: kibana-logging
          - name: SERVER_REWRITEBASEPATH
            value: "false"
        ports:
        - containerPort: 5601
          name: ui
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /api/status
            port: ui
          initialDelaySeconds: 5
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/status
            port: ui
          initialDelaySeconds: 5
          timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: kibana-logging
  labels:
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Kibana"
spec:
  ports:
  - port: 5601
    protocol: TCP
    targetPort: 5601
  selector:
    k8s-app: kibana-logging
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kibana-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - kibana.k8s.phoenixit.ru
    secretName: phx2019
  rules:
  - host: kibana.k8s.phoenixit.ru
    http:
      paths:
      - backend:
          serviceName: kibana-logging
          servicePort: 5601
